<?xml version="1.0" encoding="utf-8"?>
<events:EventDispatcher xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:business="flickr.business.*" xmlns:model="flickr.model.*" xmlns:service="flickr.service.*" xmlns:events="flash.events.*" xmlns:store="flickr.store.*">

	<store:Config id="config"/>
	
	<!-- Other Services -->
	<mx:HTTPService id="interestingness" url="{config.url}" resultFormat="e4x" result="onResult(event)" fault="onFault(event)">
		<mx:request>
			<api_key>{config.key}</api_key>
			<method>flickr.interestingness.getList</method>
		</mx:request>
	</mx:HTTPService>
	
	<mx:HTTPService id="searching" url="{config.url}" resultFormat="e4x" result="onResult(event)">
		<mx:request>
			<api_key>{config.key}</api_key>
			<method>flickr.photos.search</method>
			<!--<user_id>{currentSearch.user}</user_id>
			<page>{currentSearch.page}</page>
			<tags>{currentSearch.tags}</tags>-->
		</mx:request>
	</mx:HTTPService>
	
	<service:FlickrParser id="parser"/>
	
	<mx:Script>
		<![CDATA[
			import mx.rpc.events.FaultEvent;
			import mx.collections.ArrayCollection;
			import mx.rpc.events.ResultEvent;
			
			public function getInterestingness():void
			{
				interestingness.send();
			}
			
			public function search(value:Object):void
			{
				searching.request.user_id = value.user;
				searching.request.tags = value.tags;
				searching.send();
			}
			
			private function onResult(event:ResultEvent):void
			{
				var list:Array = parser.parseXML(event.result as XML);
				dispatchEvent(ResultEvent.createEvent(list));
			}
			
			private function onFault(event:FaultEvent):void
			{
				trace("FAULT " + event.fault);
			}
		]]>
	</mx:Script>
	
</events:EventDispatcher>